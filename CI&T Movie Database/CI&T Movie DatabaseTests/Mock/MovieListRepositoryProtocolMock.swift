///
/// @Generated by Mockolo
///

@testable import CI_T_Movie_Database
import Foundation

class MovieListRepositoryProtocolMock: MovieListRepositoryProtocol {
    var model: [Movie] = []
    var error: Error!

    private(set) var getNowPlayingMoviesCallCount = 0
    var getNowPlayingMoviesHandler: ((@escaping (Result<[Movie], Error>) -> Void) -> Void)?
    func getNowPlayingMovies(completion: @escaping (Result<[Movie], Error>) -> Void) {
        getNowPlayingMoviesCallCount += 1
        if let getNowPlayingMoviesHandler = getNowPlayingMoviesHandler {
            getNowPlayingMoviesHandler(completion)
        }

        if let error = error {
            completion(.failure(error))
        } else {
            completion(.success(model))
        }
    }

    private(set) var getUpcomingMoviesCallCount = 0
    var getUpcomingMoviesHandler: ((@escaping (Result<[Movie], Error>) -> Void) -> Void)?
    func getUpcomingMovies(completion: @escaping (Result<[Movie], Error>) -> Void) {
        getUpcomingMoviesCallCount += 1
        if let getUpcomingMoviesHandler = getUpcomingMoviesHandler {
            getUpcomingMoviesHandler(completion)
        }

        if let error = error {
            completion(.failure(error))
        } else {
            completion(.success(model))
        }
    }
}
